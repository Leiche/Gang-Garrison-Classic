<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">
    var xoffset, yoffset, xsize, ysize;
    
    xoffset = view_xview[0];
    yoffset = view_yview[0];
    xsize = view_wview[0];
    ysize = view_hview[0];
    
    draw_set_alpha(1);
    
    draw_sprite_ext(sprite_index, 0, (xoffset+xsize)-150, (yoffset+ysize) +100, 3, 3, 0, c_white, 1);

    draw_set_color(c_black);
    draw_set_valign(fa_middle);
    draw_set_halign(fa_center);

    //showing the amount of caps, and the amount of caps to win
    draw_text_transformed(xoffset+xsize/2-60, yoffset+ysize-30, string(global.redCaps),2,2,0);
    draw_text_transformed(xoffset+xsize/2+60, yoffset+ysize-30, string(global.blueCaps),2,2,0);
    // this next piece of code helps to resize the value of the numbers depending on the limit as not to overflow
    if (global.caplimit &lt;= 9)
    {
        draw_text_transformed(xoffset+xsize/2-2, yoffset+ysize-15, string(global.caplimit),2,2,0);
    }
    else
    {
        if (global.caplimit &gt; 999)
        {
            draw_sprite_ext(infinity,0,xoffset+xsize/2-3, yoffset+ysize-17, 2, 2, 0, c_white, 1);
        }
        else
        {
            draw_text(xoffset+xsize/2-2, yoffset+ysize-15, string(global.caplimit));   
        }
    }
    
    //Drawing intel status and arrows:
    
    redx=(xoffset+xsize)-448;
    redy=(yoffset+ysize)-19;
    bluex=(xoffset+xsize)-353;
    bluey=(yoffset+ysize)-19;

    if global.myself == -1 exit;
    if global.myself.object==-1{
        redsourcex=redx;    
        redsourcey=redy;
        bluesourcex=bluex;
        bluesourcey=bluey;
    }
    else{
        redsourcex=global.myself.object.x;
        redsourcey=global.myself.object.y;
        bluesourcex=redsourcex;
        bluesourcey=redsourcey;
    } 
      
    
    if (instance_exists(Civilian) &amp;&amp; global.myself.class != CLASS_CIVILIAN)
    {
        bluedir = point_direction(redsourcex,redsourcey,Civilian.x,Civilian.y);
        blueintelstatus=0;
        drawblue=true;
    }else{
        drawblue=false;
    }
     
    if (instance_exists(EscortTarget))
    {
        reddir = point_direction(bluesourcex,bluesourcey,EscortTarget.x,EscortTarget.y);
        redintelstatus=0;
        drawred=true;
    }else{
        drawred=false;
    }

    if drawred==true draw_sprite_ext(EscortArrowS, 0, redx, redy, 3, 3, reddir, c_white, 1);
    if drawblue==true draw_sprite_ext(EscortArrowS, 1, bluex, bluey, 3, 3, bluedir, c_white, 1);

//timer
if instance_exists(WinBanner) exit;
draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

if global.myself != -1 {
    if global.myself.team == TEAM_RED teamoffset=0;
    else if global.myself.team == TEAM_BLUE teamoffset=1;
}

if global.setupTimer&gt;1 { 
        draw_sprite_ext(TimerHudS,teamoffset,xoffset+xsize/2,yoffset+30,3,3,0,c_white,1);
        draw_sprite_ext(TimerS,floor(global.setupTimer/1800*12),xoffset+xsize/2+39,yoffset+30,3,3,0,c_white,1);
        seconds=floor(global.setupTimer/30);
        if seconds &gt;= 10 draw_text_transformed(xoffset+xsize/2-14,yoffset+27,string(seconds)+"secs",1.5,1.5,0);
        else if seconds &lt; 10 draw_text_transformed(xoffset+xsize/2-14,yoffset+27,"0"+string(seconds)+"secs",1.5,1.5,0);
        draw_set_halign(fa_center);
        draw_text_transformed(xoffset+xsize/2-5,yoffset+38,"Setup",1,1,0);
    }
if overtime == 1 &amp;&amp; global.setupTimer&lt;1 {
    draw_set_halign(fa_center);
    draw_sprite_ext(TimerHudS,2+teamoffset,xoffset+xsize/2,yoffset+30,3,3,0,c_white,1);
    draw_text(xoffset+xsize/2,yoffset+30,"OVERTIME");
}
else if global.setupTimer&lt;1{
    draw_set_halign(fa_right);
        draw_sprite_ext(TimerHudS,teamoffset,xoffset+xsize/2,yoffset+30,3,3,0,c_white,1);
        if timer &gt; timeLimit timeDraw = timeLimit-1;
        else timeDraw = timer;
        draw_sprite_ext(TimerS,floor(timeDraw/timeLimit*12),xoffset+xsize/2+39,yoffset+30,3,3,0,c_white,1);
        minutes=floor((timer/1800)+1);
        secondcounter=timer-minutes*1800;
        seconds=floor(secondcounter/30);   
        if timer &gt;= 1800 { 
        draw_text_transformed(xoffset+xsize/2-30,yoffset+32,string(minutes),1.4,1.4,0);
        draw_text_transformed(xoffset+xsize/2+25,yoffset+32,"mins.",1.4,1.4,0);
        }else if timer &lt; 1800 {
        draw_text_transformed(xoffset+xsize/2+27,yoffset+32,"1 min.",1.3,1.3,0);
        }
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
